buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.1.RELEASE")
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.20.1"
    }
}

plugins {
    id "java"
    id "idea"
    id "org.springframework.boot" version "2.1.1.RELEASE"
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.palantir.docker" version "0.20.1"
    id 'com.palantir.docker-run' version '0.20.1'
}

apply plugin: 'com.palantir.docker'

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
}

configurations {
    jaxDoclet
}

group 'com.pitonych'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

bootJar {
    baseName = 'xmltoyaml'
    version = version
}

task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}

docker {
    name "${project.group}/${bootJar.baseName}"
    copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}

dockerRun {
    name 'com.pitonych'
    image "${project.group}/${bootJar.baseName}"
    ports '8080:8080'
}

task createImage {
    dependsOn 'docker'
}
task startService{
    dockerRemoveContainer.shouldRunAfter dockerStop
    dependsOn 'dockerStop', 'dockerRemoveContainer', 'docker', 'dockerRun'
}

/*dockerRemoveContainer.shouldRunAfter dockerStop
tasks.getByName('build').dependsOn('dockerStop', 'dockerRemoveContainer', 'docker')
tasks.getByName('build').finalizedBy('dockerRun')*/

javadoc {
    source = sourceSets.main.allJava
    destinationDir = file("${rootDir}/javadoc")
}

task generateDocumentation{
    dependsOn 'javadoc'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")

    // Swagger
    compile("io.springfox:springfox-swagger2:2.9.2")
    compile("io.springfox:springfox-swagger-ui:2.9.2")

    // Testing
    testCompile("junit:junit:4.12")
    testCompile("commons-io:commons-io:2.6")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}
